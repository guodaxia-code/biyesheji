<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
           xmlns:context="http://www.springframework.org/schema/context"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xmlns:tx="http://www.springframework.org/schema/tx"
           xsi:schemaLocation="http://www.springframework.org/schema/beans
            http://www.springframework.org/schema/beans/spring-beans.xsd
        http://www.springframework.org/schema/context
        http://www.springframework.org/schema/context/spring-context.xsd
    http://www.springframework.org/schema/tx
        http://www.springframework.org/schema/tx/spring-tx.xsd
        http://www.springframework.org/schema/aop
        http://www.springframework.org/schema/aop/spring-aop.xsd">


<!--    配置spring ioc容器-->
    <!--    配置扫描生成bean注解-->
    <context:component-scan base-package="xyz.worldzhile.dao"> </context:component-scan>
    <context:component-scan base-package="xyz.worldzhile.service"> </context:component-scan>

<!--    配置读取多个配置文件-->
    <bean id="property" class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
        <property name="locations">
            <list>
                <value>classpath:druid.properties</value>
                <value>classpath:jedis.properties</value>
            </list>
        </property>
    </bean>
<!--配置jedis-->
    <bean id="JedisPoolConfig" class="redis.clients.jedis.JedisPoolConfig">
        <property name="maxTotal" value="${maxTotal}"></property>
        <property name="maxIdle" value="${maxIdle}"></property>
    </bean>
    <bean id="JedisPool" class="redis.clients.jedis.JedisPool">
       <constructor-arg name="poolConfig" ref="JedisPoolConfig"></constructor-arg>
        <constructor-arg name="host" value="${host}"></constructor-arg>
        <constructor-arg name="port" value="${port}"></constructor-arg>
        <constructor-arg name="timeout" value="5000"></constructor-arg>
    </bean>
    <bean id="myjedis"  factory-bean="JedisPool" factory-method="getResource" scope="prototype" ></bean>

<!--    配置spring整合mybatis-->
    <bean id="dataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource">
        <property name="driverClass" value="${driverClassName}"></property>
        <property name="jdbcUrl" value="${url}"></property>
        <property name="user" value="${username}"></property>
        <property name="password" value="${password}"></property>
    </bean>
    <!-- 配置sqlSessionFactory工厂-->
    <bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
        <property name="dataSource" ref="dataSource"></property>
    </bean>
    <!--配置dao所在的包-->
    <bean id="mapperScanner" class="org.mybatis.spring.mapper.MapperScannerConfigurer">
        <property name="basePackage" value="xyz.worldzhile.dao"></property>
    </bean>




<!-- 开启spring申明式事务-->
    <bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
        <property name="dataSource" ref="dataSource"></property>
    </bean>
    <tx:advice id="txAdvice" transaction-manager="transactionManager">
       <tx:attributes>
    <!--查询没有事务 增删改有-->
           <tx:method name="save*" propagation="REQUIRED" read-only="false" ></tx:method>
           <tx:method name="update*" propagation="REQUIRED" read-only="false" ></tx:method>
           <tx:method name="find*" propagation="SUPPORTS" read-only="true" />
           <tx:method name="need*" propagation="REQUIRED" read-only="false"></tx:method>
       </tx:attributes>
   </tx:advice>
    <!--配置aop-->
    <aop:config>
        <aop:pointcut id="pt1" expression="execution(* xyz.worldzhile.service.impl.*ServiceImpl.*(..))"/>
        <aop:advisor advice-ref="txAdvice" pointcut-ref="pt1"></aop:advisor>
    </aop:config>






    <!-- 日志   -->
<!--    <bean id="log" class="xyz.worldzhile.utils.Logger"></bean>
    <aop:config>
        <aop:pointcut id="pt1" expression="execution(* xyz.worldzhile.service.impl.*ServiceImpl.*(..))"/>
        <aop:aspect id="txAdvic" ref="log">
            <aop:before method="printf" pointcut-ref="pt1"></aop:before>
        </aop:aspect>
    </aop:config>-->










</beans>